version: '3'

services:
  # snippet-infra-api:
  #   container_name: "snippet-infra-api"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     DB_USER: sa
  #     DB_PASSWORD: password
  #     DB_NAME: compose-db
  #     DB_HOST: snippet_infra_db
  #     DB_PORT: 5432


#  snippet-api:
#    image: ghcr.io/ingsis-group-6/snippet-api:latest
#    #    ports:
#    #      - "8080:8080"
#    environment:
#      DB_USER: sa
#      DB_PASSWORD: password
#      DB_NAME: compose-db
#      DB_HOST: snippet_manager_db
#      DB_PORT: 5432

  snippet-manager:
    image: ghcr.io/ing-sis-org/snippet-manager-dev:latest
    ports:
      - "8080:8080"
    environment:
      DD_API_KEY: ${DD_APIKEY}
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db-snippet-manager
      DB_NAME: snippet-manager
      DB_PORT: 5432
   labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "api", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'


      api:
    build: .
    container_name: api
    environment:
      - DD_API_KEY=${DD_API_KEY}
    ports:
      - 8080:8080
    labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "api", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'

  db-snippet-manager:
    image: postgres:alpine
    container_name: db-snippet-manager
    restart: always
    environment:
      - POSTGRES_DB=snippet-manager
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/snippet-manager
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 1s
      timeout: 1s
      retries: 15

#  snippet-runner:
#    image: ghcr.io/ingsis-group-6/snippet-runner:latest
#    #    ports:
#    #      - "8082:8080"
#    environment:
#      DB_USER: sa
#      DB_PASSWORD: password
#      DB_NAME: compose-db
#      DB_HOST: snippet_manager_db
#      DB_PORT: 5432
#
#  snippet-share:
#    image: ghcr.io/ingsis-group-6/snippet-share:latest
#    #    ports:
#    #      - "8083:8080"
#    environment:
#      DB_USER: sa
#      DB_PASSWORD: password
#      DB_NAME: compose-db
#      DB_HOST: snippet_manager_db
#      DB_PORT: 5432

#  proxy:
#    container_name: "reverse-proxy"
#    image: nginx
#    ports:
#      - "80:80"
#    volumes:
#      - ./conf.d:/etc/nginx/conf.d:ro
volumes: 
  db-data:
